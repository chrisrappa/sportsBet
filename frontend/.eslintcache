[{"/home/vrdevchris/rappaSite/frontend/src/index.js":"1","/home/vrdevchris/rappaSite/frontend/src/App.js":"2","/home/vrdevchris/rappaSite/frontend/src/reportWebVitals.js":"3","/home/vrdevchris/rappaSite/frontend/src/Screens/HomeScreen.js":"4","/home/vrdevchris/rappaSite/frontend/src/Screens/ProductScreen.js":"5","/home/vrdevchris/rappaSite/frontend/src/store.js":"6","/home/vrdevchris/rappaSite/frontend/src/reducers/productReducers.js":"7","/home/vrdevchris/rappaSite/frontend/src/constants/productConstants.js":"8","/home/vrdevchris/rappaSite/frontend/src/actions/productActions.js":"9","/home/vrdevchris/rappaSite/frontend/src/Screens/CartScreen.js":"10","/home/vrdevchris/rappaSite/frontend/src/reducers/cartReducers.js":"11","/home/vrdevchris/rappaSite/frontend/src/constants/cartConstants.js":"12","/home/vrdevchris/rappaSite/frontend/src/actions/cartActions.js":"13","/home/vrdevchris/rappaSite/frontend/src/Screens/SigninScreen.js":"14","/home/vrdevchris/rappaSite/frontend/src/actions/userActions.js":"15","/home/vrdevchris/rappaSite/frontend/src/constants/userConstants.js":"16","/home/vrdevchris/rappaSite/frontend/src/reducers/userReducers.js":"17","/home/vrdevchris/rappaSite/frontend/src/Screens/RegisterScreen.js":"18","/home/vrdevchris/rappaSite/frontend/src/Screens/ProductsScreen.js":"19","/home/vrdevchris/rappaSite/frontend/src/Screens/ShippingScreen.js":"20","/home/vrdevchris/rappaSite/frontend/src/components/CheckoutSteps.js":"21","/home/vrdevchris/rappaSite/frontend/src/Screens/PaymentScreen.js":"22","/home/vrdevchris/rappaSite/frontend/src/Screens/PlaceOrderScreen.js":"23","/home/vrdevchris/rappaSite/frontend/src/actions/orderActions.js":"24","/home/vrdevchris/rappaSite/frontend/src/constants/orderConstants.js":"25","/home/vrdevchris/rappaSite/frontend/src/reducers/orderReducers.js":"26","/home/vrdevchris/rappaSite/frontend/src/Screens/OrderScreen.js":"27","/home/vrdevchris/rappaSite/frontend/src/components/LoadingBox.js":"28","/home/vrdevchris/rappaSite/frontend/src/components/MessageBox.js":"29","/home/vrdevchris/rappaSite/frontend/src/Screens/ProfileScreen.js":"30","/home/vrdevchris/rappaSite/frontend/src/Screens/OrdersScreen.js":"31","/home/vrdevchris/rappaSite/frontend/src/Screens/OrderScreenStripe.js":"32","/home/vrdevchris/rappaSite/frontend/src/components/CardInput.js":"33","/home/vrdevchris/rappaSite/frontend/src/components/StripePayment.js":"34","/home/vrdevchris/sportsBook/frontend/src/index.js":"35","/home/vrdevchris/sportsBook/frontend/src/App.js":"36","/home/vrdevchris/sportsBook/frontend/src/store.js":"37","/home/vrdevchris/sportsBook/frontend/src/Screens/HomeScreen.js":"38","/home/vrdevchris/sportsBook/frontend/src/Screens/ProfileScreen.js":"39","/home/vrdevchris/sportsBook/frontend/src/reducers/userReducers.js":"40","/home/vrdevchris/sportsBook/frontend/src/actions/userActions.js":"41","/home/vrdevchris/sportsBook/frontend/src/constants/userConstants.js":"42","/home/vrdevchris/sportsBook/frontend/src/reducers/postReducers.js":"43","/home/vrdevchris/sportsBook/frontend/src/actions/postActions.js":"44","/home/vrdevchris/sportsBook/frontend/src/constants/postConstants.js":"45","/home/vrdevchris/sportsBook/frontend/src/components/Navbar.js":"46","/home/vrdevchris/sportsBook/frontend/src/components/PostComponents/PostFilter.js":"47","/home/vrdevchris/sportsBook/frontend/src/components/SidebarComponents/Sidebar.js":"48","/home/vrdevchris/sportsBook/frontend/src/components/SidebarComponents/Advertisement.js":"49","/home/vrdevchris/sportsBook/frontend/src/components/ProfileComponents/ProfileNav.js":"50","/home/vrdevchris/sportsBook/frontend/src/Screens/PredictionsScreen.js":"51","/home/vrdevchris/sportsBook/frontend/src/Screens/UpcomingScreen.js":"52","/home/vrdevchris/sportsBook/frontend/src/components/UpcomingComponents/UpcomingGames.js":"53","/home/vrdevchris/sportsBook/frontend/src/components/UpcomingComponents/UpcomingInfo.js":"54","/home/vrdevchris/sportsBook/frontend/src/components/SidebarComponents/UpcomingGamesSide.js":"55","/home/vrdevchris/sportsBook/frontend/src/components/RegisterSignIn/Register.js":"56","/home/vrdevchris/sportsBook/frontend/src/components/RegisterSignIn/SignIn.js":"57","/home/vrdevchris/sportsBook/frontend/src/components/PredictionsComponents/Predictions.js":"58","/home/vrdevchris/sportsBook/frontend/src/components/PredictionsComponents/PredictionsInfo.js":"59","/home/vrdevchris/sportsBook/frontend/src/components/SidebarComponents/PredictionsSide.js":"60","/home/vrdevchris/sportsBook/frontend/src/components/PostComponents/Post.js":"61","/home/vrdevchris/sportsBook/frontend/src/components/PostComponents/Comments.js":"62","/home/vrdevchris/sportsBook/frontend/src/Screens/CreatePostScreen.js":"63","/home/vrdevchris/sportsBook/frontend/src/components/PostComponents/CreatePost.js":"64","/home/vrdevchris/sportsBook/frontend/src/reducers/sportsAPIReducers.js":"65","/home/vrdevchris/sportsBook/frontend/src/constants/sportsAPIConstants.js":"66","/home/vrdevchris/sportsBook/frontend/src/actions/sportsAPIActions.js":"67","/home/vrdevchris/sportsBook/frontend/src/Screens/InnerPostScreen.js":"68","/home/vrdevchris/sportsBook/frontend/src/components/SidebarComponents/GoogleAds.js":"69"},{"size":594,"mtime":1620757124170,"results":"70","hashOfConfig":"71"},{"size":4512,"mtime":1620944785830,"results":"72","hashOfConfig":"71"},{"size":362,"mtime":1611689308753,"results":"73","hashOfConfig":"71"},{"size":4458,"mtime":1620853074598,"results":"74","hashOfConfig":"71"},{"size":3983,"mtime":1620944792900,"results":"75","hashOfConfig":"71"},{"size":1604,"mtime":1616267149230,"results":"76","hashOfConfig":"71"},{"size":1981,"mtime":1615138212910,"results":"77","hashOfConfig":"71"},{"size":728,"mtime":1619803749126,"results":"78","hashOfConfig":"71"},{"size":2810,"mtime":1615420977900,"results":"79","hashOfConfig":"71"},{"size":3635,"mtime":1620853253008,"results":"80","hashOfConfig":"71"},{"size":1006,"mtime":1615138212910,"results":"81","hashOfConfig":"71"},{"size":210,"mtime":1615138212910,"results":"82","hashOfConfig":"71"},{"size":1240,"mtime":1620855164068,"results":"83","hashOfConfig":"71"},{"size":2549,"mtime":1616439810560,"results":"84","hashOfConfig":"71"},{"size":2053,"mtime":1615410821630,"results":"85","hashOfConfig":"71"},{"size":559,"mtime":1615138212910,"results":"86","hashOfConfig":"71"},{"size":1532,"mtime":1615138212910,"results":"87","hashOfConfig":"71"},{"size":2841,"mtime":1616457740490,"results":"88","hashOfConfig":"71"},{"size":8666,"mtime":1620770654120,"results":"89","hashOfConfig":"71"},{"size":2902,"mtime":1615138212910,"results":"90","hashOfConfig":"71"},{"size":394,"mtime":1615138212880,"results":"91","hashOfConfig":"71"},{"size":1616,"mtime":1615138212880,"results":"92","hashOfConfig":"71"},{"size":5201,"mtime":1620860525708,"results":"93","hashOfConfig":"71"},{"size":4263,"mtime":1619808481596,"results":"94","hashOfConfig":"71"},{"size":1137,"mtime":1619803739415,"results":"95","hashOfConfig":"71"},{"size":2977,"mtime":1615138212910,"results":"96","hashOfConfig":"71"},{"size":5674,"mtime":1620757124160,"results":"97","hashOfConfig":"71"},{"size":184,"mtime":1615138212910,"results":"98","hashOfConfig":"71"},{"size":186,"mtime":1615138212910,"results":"99","hashOfConfig":"71"},{"size":4741,"mtime":1616434840920,"results":"100","hashOfConfig":"71"},{"size":2530,"mtime":1615138212910,"results":"101","hashOfConfig":"71"},{"size":8896,"mtime":1620944146630,"results":"102","hashOfConfig":"71"},{"size":544,"mtime":1620757124170,"results":"103","hashOfConfig":"71"},{"size":3673,"mtime":1620757480650,"results":"104","hashOfConfig":"71"},{"size":357,"mtime":1636858207348,"results":"105","hashOfConfig":"106"},{"size":1193,"mtime":1638843496690,"results":"107","hashOfConfig":"106"},{"size":1471,"mtime":1638071493470,"results":"108","hashOfConfig":"106"},{"size":2076,"mtime":1638304607195,"results":"109","hashOfConfig":"106"},{"size":2231,"mtime":1639267432779,"results":"110","hashOfConfig":"106"},{"size":1392,"mtime":1637528682826,"results":"111","hashOfConfig":"106"},{"size":2566,"mtime":1637449465461,"results":"112","hashOfConfig":"106"},{"size":560,"mtime":1637449449021,"results":"113","hashOfConfig":"106"},{"size":3611,"mtime":1638071480230,"results":"114","hashOfConfig":"106"},{"size":4497,"mtime":1638071833780,"results":"115","hashOfConfig":"106"},{"size":1658,"mtime":1638070464670,"results":"116","hashOfConfig":"106"},{"size":9881,"mtime":1638486885504,"results":"117","hashOfConfig":"106"},{"size":1354,"mtime":1638075906750,"results":"118","hashOfConfig":"106"},{"size":917,"mtime":1639267297279,"results":"119","hashOfConfig":"106"},{"size":234,"mtime":1636491531438,"results":"120","hashOfConfig":"106"},{"size":940,"mtime":1639267460089,"results":"121","hashOfConfig":"106"},{"size":2615,"mtime":1639266881819,"results":"122","hashOfConfig":"106"},{"size":2987,"mtime":1639266889919,"results":"123","hashOfConfig":"106"},{"size":2044,"mtime":1639267399929,"results":"124","hashOfConfig":"106"},{"size":930,"mtime":1637545280956,"results":"125","hashOfConfig":"106"},{"size":2331,"mtime":1638843242860,"results":"126","hashOfConfig":"106"},{"size":4334,"mtime":1637272533079,"results":"127","hashOfConfig":"106"},{"size":2357,"mtime":1637272400399,"results":"128","hashOfConfig":"106"},{"size":1743,"mtime":1639267374599,"results":"129","hashOfConfig":"106"},{"size":3128,"mtime":1638753463378,"results":"130","hashOfConfig":"106"},{"size":2067,"mtime":1638761626768,"results":"131","hashOfConfig":"106"},{"size":3881,"mtime":1638409690625,"results":"132","hashOfConfig":"106"},{"size":1675,"mtime":1638075844690,"results":"133","hashOfConfig":"106"},{"size":804,"mtime":1637196209722,"results":"134","hashOfConfig":"106"},{"size":3460,"mtime":1638409703885,"results":"135","hashOfConfig":"106"},{"size":944,"mtime":1638740972368,"results":"136","hashOfConfig":"106"},{"size":384,"mtime":1637457989151,"results":"137","hashOfConfig":"106"},{"size":1706,"mtime":1639266841359,"results":"138","hashOfConfig":"106"},{"size":1276,"mtime":1638075871710,"results":"139","hashOfConfig":"106"},{"size":408,"mtime":1639265785829,"results":"140","hashOfConfig":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},"q4h5c7",{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"143"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"143"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"143"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"143"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"143"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"143"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"143"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"143"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"143"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"143"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"143"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"143"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"143"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},"hpblhu",{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/vrdevchris/rappaSite/frontend/src/index.js",[],["297","298"],"/home/vrdevchris/rappaSite/frontend/src/App.js",["299","300"],"import {BrowserRouter, Route, Link} from 'react-router-dom';\nimport HomeScreen from './Screens/HomeScreen';\nimport ProductScreen from './Screens/ProductScreen';\nimport CartScreen from './Screens/CartScreen';\nimport SigninScreen from './Screens/SigninScreen';\nimport RegisterScreen from './Screens/RegisterScreen';\nimport ProductsScreen from './Screens/ProductsScreen';\nimport { useSelector } from 'react-redux';\nimport ShippingScreen from './Screens/ShippingScreen';\nimport PaymentScreen from './Screens/PaymentScreen';\nimport PlaceOrderScreen from './Screens/PlaceOrderScreen';\nimport OrderScreen from './Screens/OrderScreen';\nimport ProfileScreen from './Screens/ProfileScreen';\nimport OrdersScreen from './Screens/OrdersScreen';\nimport { useState } from 'react';\nimport OrderScreenStripe from './Screens/OrderScreenStripe';\n\n\nfunction App() {\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n\n  const userSignin = useSelector(state => state.userSignin);\n  const { userInfo } =  userSignin;\n  \n  const openMenu = () => {\n    document.querySelector(\".sidebar\").classList.add(\"open\");\n  }\n\n  const closeMenu = () => {\n    document.querySelector(\".sidebar\").classList.remove(\"open\");\n  }\n\n  const [navScroll, setNavScroll] = useState(false);\n\n  const addShadow = () => {\n    if (window.scrollY >= 50){\n      setNavScroll(true);\n    } else {\n      setNavScroll(false);\n    }\n  }\n\n  window.addEventListener('scroll', addShadow);\n\n  return (\n  <BrowserRouter>\n    <div className=\"grid-container\">\n      <header className={ navScroll ? \"header active\" : \"header\"}>\n        <div className=\"brand\">\n          <button onClick={openMenu}>\n            &#9776;\n          </button>\n          <Link to=\"/\">Healthy Chef</Link>\n        </div>\n        <div className=\"header-links\">\n          <Link to=\"/cart\">\n            <span>Cart</span>\n            {cartItems.length > 0 && (\n                  <span className=\"badge\">{cartItems.length}</span>\n                )}\n          </Link>\n          {\n            userInfo ? <Link to=\"/profile\">{userInfo.name}</Link>:\n            <Link to=\"/signin\">Sign In</Link>\n          }\n          { userInfo && userInfo.isAdmin && (\n            <div className=\"dropdown\">\n              <a href=\"#\">Admin</a>\n              <ul className=\"dropdown-content\">\n                <li>\n                  <Link to=\"/orders\">Orders</Link>\n                  <Link to=\"/products\">Products</Link>\n                </li>\n              </ul>\n            </div>\n          )}\n        </div>\n      </header>\n      <aside className=\"sidebar\">\n        <button className=\"sidebar-close-button\" onClick={closeMenu}>x</button>\n        <ul className=\"categories\" onClick={closeMenu}>\n          <li>\n            <Link to=\"/#products\" onClick={closeMenu}>All</Link>\n          </li>\n          <li>\n            <Link to=\"/category/Tofu#products\" onClick={closeMenu}>Tofu</Link>\n          </li>\n          <li>\n            <Link to=\"/category/Beef#products\" onClick={closeMenu}>Beef</Link>\n          </li>\n          <li>\n            <Link to=\"/category/Vegetable#products\" onClick={closeMenu}>Vegetable</Link>\n          </li>\n          <li>\n            <Link to=\"/category/Fish#products\" onClick={closeMenu}>Fish</Link>\n          </li>\n          <li>\n            <Link to=\"/category/Chicken#products\" onClick={closeMenu}>Chicken</Link>\n          </li>\n        </ul>\n      </aside>\n      <main className=\"main\">\n        <div className=\"content\" />\n          <Route path=\"/orders\" exact={true} component={OrdersScreen} />\n          <Route path=\"/products\" exact={true} component={ProductsScreen} />\n          <Route path=\"/shipping\" exact={true} component={ShippingScreen} />\n          <Route path=\"/payment\" exact={true} component={PaymentScreen} />\n          <Route path=\"/placeorder\" exact={true} component={PlaceOrderScreen} />\n          <Route path=\"/\" exact={true} component={HomeScreen} />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\"  component={CartScreen} />\n          <Route path=\"/category/:id\"  component={HomeScreen} />\n          <Route path=\"/signin\" component={SigninScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/order/:id\" component={OrderScreenStripe} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n      </main>\n      <footer className=\"footer\">\n        All Rights Reserved\n      </footer>\n    </div>\n  </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/vrdevchris/rappaSite/frontend/src/reportWebVitals.js",[],"/home/vrdevchris/rappaSite/frontend/src/Screens/HomeScreen.js",["301","302","303","304","305","306","307"],"import React, { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listProducts } from '../actions/productActions';\n\n\n\nfunction HomeScreen (props) {\n\n    const [sortOrder, setSortOrder] = useState('');\n    const category = props.match.params.id ? props.match.params.id:'';\n    \n    const productList = useSelector(state => state.productList);\n    const {products, loading, error} = productList;\n\n    const productDetails = useSelector(state => state.productDetails);\n    const { product } = productDetails;\n    \n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(listProducts(category));\n        \n        return () => {\n            //\n        }\n    }, [category]);\n\n\n    const submitHandler = (e) => {\n      e.preventDefault();\n      dispatch(listProducts(category, sortOrder))\n    } \n\n    const sortHandler = (e) => {\n      setSortOrder(e.target.value);\n      dispatch(listProducts(category, sortOrder))\n    }\n\n    return (\n    <>\n    <div className=\"jumbo\">\n      <div className=\"main-img\">\n        <img className=\"grow\" src=\"https://res.cloudinary.com/djrbfvpit/image/upload/v1615848655/jumbopicsmaller_fhfhjt.png\"></img>\n      </div>\n      <div className=\"tagline\">\n        <h1>Meal Prep.</h1>\n        <span className=\"taglinesub\"><h1>Made Easy.</h1></span>\n        <img className=\"fade-in slide-in-down\" src=\"https://res.cloudinary.com/djrbfvpit/image/upload/v1616011006/downarrow_cz4juo.png\"></img>\n      </div>\n      \n    </div>\n    <div className=\"order-steps\">\n      <img src=\"https://res.cloudinary.com/djrbfvpit/image/upload/v1616008974/checkoutsteps_phlzyk.png\"></img>\n    </div>\n\n      {/* I don't see a good use for the search funcionatliy right now, but we'll keep it here for later */}\n\n      {/* {category && <h2>{category}</h2>}\n      <ul className=\"filter\">\n        <li>\n          <form onSubmit={submitHandler}>\n            <input name=\"searchKeyword\" onChange={(e) => setSearchKeyword(e.target.value)} />\n            <button type=\"submit\">Search</button>\n          </form>\n        </li>\n        <li>\n        Sort By {''}\n          <select name=\"sortOrder\" onChange={sortHandler}>\n            <option value=\"\">Newest</option>\n            <option value=\"lowest\">Lowest</option>\n            <option value=\"highest\">Highest</option>\n          </select>\n        </li>\n      </ul> */}\n      {loading ? (\n        <div>Loading...</div>\n      ) : error? (\n        <div>{error}</div>\n      ) : (\n      <ul className=\"products\" id=\"products\">\n            {products.map((product) => (\n              <li key={product._id}>\n                  <div className=\"product\">\n                    <Link to={'/product/' + product._id}>\n                      <img className=\"product-image\" src={product.image} alt=\"product\"/>\n                    </Link> \n                    <div className=\"product-name\">\n                      <Link to={'/product/' + product._id}>{product.name}</Link> \n                      </div>\n                    <div className=\"product-price\">${product.price}</div>\n                    <div className=\"product-rating\">{product.rating} Stars</div>\n                    <div className=\"product-rating\">{product.numReviews} Reviews</div>\n                    <div>\n                      <Link to={'/product/' + product._id}>\n                        <button className=\"button primary\">\n                          View Details\n                        </button>\n                      </Link>\n                    </div>\n\n                    {/* In the future, I want to have \"Add to Cart\" button and \"Qty\" selection \n                    using +/- buttons that are limited by product.countInStock. Also to have a \"View Details\" button\n                    on the product card that opens a pop up window with product details. This flow would have the\n                    customer continually adding items with the cart updating as they do instead of moving through\n                    two different screens for this. */}\n\n                    {/* Problems encountered with this so far: \n                    - When I increment/decrement on one product it adjusts it for all products on the page\n                    - Unable to get limit from product.countInStock for +/- buttons \n                    */}\n\n                  </div>\n              </li>\n              ))}\n        </ul>  \n      )}\n  </>\n  );\n}\n    \n\nexport default HomeScreen;","/home/vrdevchris/rappaSite/frontend/src/Screens/ProductScreen.js",["308","309","310","311"],"import {Link} from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { detailsProduct } from '../actions/productActions';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { HashLink } from 'react-router-hash-link';\n\n\n\nfunction useHover(){\n    const ref = useRef();\n    const [hovered, setHovered] = useState(false);\n\n    const enter = () => setHovered(true);\n    const leave = () => setHovered(false);\n    \n    useEffect(() => {\n \n        ref.current.addEventListener('mouseenter', enter)\n        ref.current.addEventListener('mouseleave', leave)\n\n        return () => {\n            //\n        }\n    }, [])\n    \n    return[ref, hovered];\n}\n\n\n\nfunction ProductScreen (props) {\n\n    const [ref, hovered] = useHover();\n    const [qty, setQty] = useState(1);\n    const productDetails = useSelector(state => state.productDetails);\n    const { product, loading, error } = productDetails;\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(detailsProduct(props.match.params.id));\n        return () => {\n          //\n        };\n      }, []);\n\n      const handleAddToCart = () => {\n\n          props.history.push(\"/cart/\" + props.match.params.id + \"?qty=\" + qty) \n\n        }\n\n\n\n    return <div className=\"details-container\">\n        <div className=\"back-to-result\">\n            <HashLink to=\"/#products\" ref={ref}>\n                \n                {hovered ? \n                <img src=\"https://res.cloudinary.com/djrbfvpit/image/upload/v1616265424/circle_left_hover_us7qqa.png\"/>\n                : \n                <img src=\"https://res.cloudinary.com/djrbfvpit/image/upload/v1616262644/circled-left-2_usxejf.png\" />}\n\n                \n            </HashLink>\n        </div>\n        {loading? <div>Loading...</div>:\n        error? <div>{error}</div>: \n\n    (\n        <div className=\"details\">\n            <div className=\"details-image\">\n                <img src={product.image} alt=\"product\" />\n            </div>\n            <div className=\"details-info-action\">\n                <div className=\"details-info\">\n                    <ul>\n                        <li>\n                            <h4>{product.name}</h4>\n                        </li>\n                        <li className=\"rating-price\">\n                            <b>${product.price}</b>\n                            {product.rating} Stars ({product.numReviews} Reviews)\n                        </li>\n                        <li className=\"description\">\n                            <div className=\"description-head\">\n                                Description\n                            </div>\n                            \n                            <div>\n                                {product.description}\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"details-action\">\n                            <div>\n                            Status: {product.countInStock > 0? <div className=\"instock\">In Stock</div> : \"Out Of Stock\"}\n                            </div>\n                            <div>\n                                <div>Qty:</div> <select value={qty} onChange={(e) => {setQty(e.target.value)}}>\n                                    {[...Array(product.countInStock).keys()].map(x =>\n                                    <option key={x+1} value={x+1}>{x+1}</option>\n                                        )}\n                                </select>\n                            </div>\n                            <div>\n                            {\n                            \n                            product.countInStock > 0 && \n                            <button  onClick={handleAddToCart} className=\"button primary\">Add to Cart</button>\n\n                            }\n                            </div>\n                </div>\n            </div>\n        </div>\n\n    \n    )\n    \n    }\n    </div> \n}\n\nexport default ProductScreen;\n\n\n","/home/vrdevchris/rappaSite/frontend/src/store.js",["312","313"],"import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport { productListReducer, productDetailsReducer, productSaveReducer, productDeleteReducer} from './reducers/productReducers';\nimport { cartReducer} from './reducers/cartReducers';\nimport Cookie from 'js-cookie';\nimport {userRegisterReducer, userSigninReducer, userUpdateReducer} from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, myOrderListReducer, orderListReducer, orderDeleteReducer } from './reducers/orderReducers';\n\n\nconst cartItems = Cookie.getJSON(\"cartItems\") || [];\nconst userInfo = Cookie.getJSON(\"userInfo\") || null;\n\n\nconst initialState = {\n    cart: { cartItems, shipping: {}, payment: {} },\n    userSignin: { userInfo },\n  };\n\nconst reducer = combineReducers({\n    productList: productListReducer, \n    productDetails: productDetailsReducer,\n    productSave: productSaveReducer,\n    productDelete: productDeleteReducer,\n    cart: cartReducer,\n    userSignin: userSigninReducer,\n    userRegister: userRegisterReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    userUpdate: userUpdateReducer,\n    myOrderList: myOrderListReducer,\n    orderList: orderListReducer,\n    orderDelete: orderDeleteReducer,\n})\n\n\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({trace: true}) || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","/home/vrdevchris/rappaSite/frontend/src/reducers/productReducers.js",[],"/home/vrdevchris/rappaSite/frontend/src/constants/productConstants.js",[],"/home/vrdevchris/rappaSite/frontend/src/actions/productActions.js",[],"/home/vrdevchris/rappaSite/frontend/src/Screens/CartScreen.js",[],"/home/vrdevchris/rappaSite/frontend/src/reducers/cartReducers.js",[],"/home/vrdevchris/rappaSite/frontend/src/constants/cartConstants.js",[],"/home/vrdevchris/rappaSite/frontend/src/actions/cartActions.js",["314"],"import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT, CART_SAVE_SHIPPING } from '../constants/cartConstants';\nimport Cookie from 'js-cookie';\n\n\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\n\n  const {data} = await axios.get(\"/api/products/\" + productId);\n  const { cart: { cartItems } } = getState();\n\n  try{\n    dispatch({type: CART_ADD_ITEM, payload:{\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n      stripeID: data.stripeID\n    }});\n    \n    localStorage.setItem(\n      'cartItems',\n      JSON.stringify(getState().cart.cartItems))\n    \n    } catch (error) {\n    \n  }\n}\n\nconst removeFromCart = (productId) => (dispatch, getState) => {\n  dispatch({ type: CART_REMOVE_ITEM, payload: productId });  \n  const { cart: { cartItems } } = getState();\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n}\n\nconst saveShipping = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_SHIPPING, payload: data});\n}\n\nconst savePayment = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_PAYMENT, payload: data});\n}\n\n\nexport { addToCart, removeFromCart, saveShipping, savePayment }","/home/vrdevchris/rappaSite/frontend/src/Screens/SigninScreen.js",["315","316","317","318"],"import { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { signin, register } from '../actions/userActions';\n\nfunction SigninScreen (props) {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [name, setName] = useState('');\n    const userSignin = useSelector(state => state.userSignin || {});\n    const { loading, userInfo, error } = userSignin;\n    const dispatch = useDispatch();\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1]: '/';\n    \n    function demoCreds(){\n        setEmail('demo@demo.com');\n        setPassword('demo');\n    }\n\n    useEffect(() => {\n        if(userInfo){\n            props.history.push(redirect);\n        }\n        return () => {\n          //\n        };\n      }, [userInfo]);\n\n\n    const submitHandler = (e) => {\n        dispatch(signin(email, password)); \n        e.preventDefault();\n    }\n\n    return <div className=\"form\">\n        <form onSubmit={submitHandler}>\n            <ul className=\"form-container\">\n                <li>\n                    <h2>Sign-In</h2>\n                </li>\n                <li>\n                    {loading && <div>Loading...</div>}\n                    {error && <div>{error}</div>}\n                </li>\n                <li>\n                    <label htmlFor=\"email\">\n                        Email\n                    </label>\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor=\"password\">\n                        Password\n                    </label>\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)}></input>\n                </li>\n                <li>\n                    <button type=\"submit\" className=\"button primary\"> Sign In</button>\n                </li>\n                <li>\n                    <button type=\"submit\" className=\"button primary\" onClick={() => demoCreds()}> Demo </button>\n                </li>\n                <li>\n                    First time visiting?\n                </li>\n                <li>\n                    <Link to={redirect === \"/\" ? \"register\" : \"registers?redirect=\" + redirect} className=\"button text-center secondary\">Create your account!</Link>\n                </li>\n            </ul>\n        </form>\n    </div>\n}\n\nexport default SigninScreen;\n","/home/vrdevchris/rappaSite/frontend/src/actions/userActions.js",[],"/home/vrdevchris/rappaSite/frontend/src/constants/userConstants.js",[],"/home/vrdevchris/rappaSite/frontend/src/reducers/userReducers.js",[],"/home/vrdevchris/rappaSite/frontend/src/Screens/RegisterScreen.js",["319","320"],"import { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { register } from '../actions/userActions';\n\nfunction RegisterScreen (props) {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [rePassword, setRePassword] = useState('');\n    const [password, setPassword] = useState('');\n    const userRegister = useSelector(state => state.userRegister || {});\n    const { loading, userInfo, error } = userRegister;\n    const dispatch = useDispatch();\n\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\n    useEffect(() => {\n        if(userInfo){\n            props.history.push(redirect);\n        }\n        return () => {\n          //\n        };\n      }, [userInfo]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(register(name, email, password));\n    }\n\n    return <div className=\"form\">\n        <form onSubmit={submitHandler}>\n            <ul className=\"form-container\">\n                <li>\n                    <h2>Create Account</h2>\n                </li>\n                <li>\n                    {loading && <div>Loading...</div>}\n                    {error && <div>{error}</div>}\n                </li>\n                <li>\n                    <label htmlFor=\"name\">\n                        Name\n                    </label>\n                    <input type=\"name\" name=\"name\" id=\"name\" onChange={(e) => setName(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor=\"email\">\n                        Email\n                    </label>\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor=\"password\">\n                        Password\n                    </label>\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor=\"rePassword\">\n                        Re-Enter Password\n                    </label>\n                    <input type=\"Password\" name=\"rePassword\" id=\"rePassword\" onChange={(e) => setRePassword(e.target.value)}></input>\n                </li>\n                <li>\n                    <button type=\"submit\" className=\"button primary\"> Sign Up </button>\n                </li>\n                <li>\n                    Already have an account? <Link to={redirect === \"/\" ? \"signin\" : \"signin?redirect=\" + redirect} className=\"button text-center secondary\">Sign In</Link>\n                </li>\n            </ul>\n        </form>\n    </div>\n}\n\n\n\nexport default RegisterScreen;\n","/home/vrdevchris/rappaSite/frontend/src/Screens/ProductsScreen.js",["321","322","323","324","325","326","327"],"import { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { listProducts, saveProduct, deleteProduct } from '../actions/productActions';\nimport { Redirect } from 'react-router-dom';\nimport HomeScreen from './HomeScreen';\n\n\n\nfunction ProductsScreen (props) {\n\n    const [modalVisible, setModalVisible] = useState(false);\n    const [id, setId] = useState('');\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [image, setImage] = useState('');\n    const [brand, setBrand] = useState('');\n    const [category, setCategory] = useState('');\n    const [countInStock, setCountInStock] = useState('');\n    const [description, setDescription] = useState('');\n    const [stripeID, setStripeID] = useState('');\n    const dispatch = useDispatch();\n    const productList = useSelector((state) => state.productList)\n    const {loading, products, error} = productList;\n\n    const productSave = useSelector((state) => state.productSave || {});\n    const { loading: loadingSave, success: successSave, error: errorSave } = productSave;\n\n    const productDelete = useSelector((state) => state.productDelete || {});\n    const { loading: loadingDelete, success: successDelete, error: errorDelete } = productDelete;\n\n    useEffect(() => {\n        if(successSave || successDelete){\n            setModalVisible(false);\n\n        } else {\n            //\n        }\n        dispatch(listProducts());\n        \n        return () => {\n          //\n        };\n      }, [successSave, successDelete]);\n\n    const openModal = (product) => {\n        setModalVisible(true);\n        setId(product._id);\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setStripeID(product.stripeID);\n    }\n\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(saveProduct({\n            _id: id,\n            name, \n            price, \n            image, \n            brand, \n            category, \n            countInStock, \n            description,\n            stripeID\n        })\n        );\n\n    };\n\n    const deleteHandler = (product) => {\n        dispatch(deleteProduct(product._id))\n    }\n\n    return<div className=\"content content-margined\">\n\n        <div className=\"product-header\">\n            <h3>Products</h3>\n            <button className = \"button primary\" onClick={() => openModal({})}>Create Product</button>\n        </div>\n        {modalVisible &&\n            <div className=\"form\">\n                <form onSubmit={submitHandler}>\n                    <ul className=\"form-container\">\n                        <li>\n                            <h2>{id ? \"Update Product\" : \"Create Product\"}</h2>\n                        </li>\n                        <li>\n                            {loadingSave && <div>Loading...</div>}\n                            {errorSave && <div>{errorSave}</div>}\n                        </li>\n                        <li>\n                            <label htmlFor=\"name\">Name</label>\n                            <input \n                            type=\"text\"\n                            placeholder=\"Required\" \n                            name=\"name\"\n                            value={name} \n                            id=\"name\" \n                            onChange={(e) => setName(e.target.value)}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"price\">Price</label>\n                            <input \n                            type=\"text\"\n                            placeholder=\"Required\" \n                            name=\"price\"\n                            value={price} \n                            id=\"price\" \n                            onChange={(e) => setPrice(e.target.value)}>   \n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"image\">Image</label>\n                            <input \n                            type=\"text\"\n                            placeholder=\"Required\" \n                            name=\"image\"\n                            value={image} \n                            id=\"image\" \n                            onChange={(e) => setImage(e.target.value)}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"brand\">Brand</label>\n                            <input \n                            type=\"text\"\n                            placeholder=\"Required\" \n                            name=\"brand\"\n                            value={brand} \n                            id=\"brand\" \n                            onChange={(e) => setBrand(e.target.value)}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"category\">Category</label>\n                            <input \n                            type=\"text\" \n                            placeholder=\"Required\"\n                            name=\"category\"\n                            value={category} \n                            id=\"category\" \n                            onChange={(e) => setCategory(e.target.value)}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"countInStock\">Count In Stock</label>\n                            <input \n                            type=\"text\"\n                            placeholder=\"Required\"\n                            name=\"countInStock\"\n                            value={countInStock} \n                            id=\"countInStock\" \n                            onChange={(e) => setCountInStock(e.target.value)}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"description\">Description</label>\n                            <textarea \n                            name=\"description\"\n                            placeholder=\"Required\"\n                            value={description} \n                            id=\"description\" \n                            onChange={(e) => setDescription(e.target.value)}> \n                            </textarea>\n                        </li>\n                        <li>\n                            <label htmlFor=\"stripeID\">Stripe ID</label>\n                            <textarea \n                            name=\"description\"\n                            placeholder=\"Required\"\n                            value={stripeID} \n                            id=\"stripeID\" \n                            onChange={(e) => setStripeID(e.target.value)}> \n                            </textarea>\n                        </li>\n                        <li>\n                            <button type=\"submit\" className=\"button primary\">{id ? \"Update\" : \"Create\"}</button>\n                        </li>\n                        <li>\n                            <button type=\"button\" className=\"button secondary\" onClick={() => setModalVisible(false)}>Back</button>\n                        </li>\n                    </ul>\n                </form>\n            </div>\n        }\n\n        <div className=\"product-list\">\n            <table className = \"table\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Price</th>\n                        <th>Category</th>\n                        <th>Brand</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {products.map((product) =>(\n                    <tr key={product._id}>\n                        <td>{product._id}</td>\n                        <td>{product.name}</td>\n                        <td>{product.price}</td>\n                        <td>{product.category}</td>\n                        <td>{product.brand}</td>\n                        <td>\n                            <button className=\"button\" onClick={() => openModal(product)}>Edit</button>\n                            {' '}\n                            <button className=\"button\" onClick={() => deleteHandler(product)}>Delete</button>\n                        </td>\n                    </tr>))}\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n}\n\nexport default ProductsScreen;\n","/home/vrdevchris/rappaSite/frontend/src/Screens/ShippingScreen.js",["328","329","330"],"import { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { saveShipping } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nfunction ShippingScreen (props) {\n\n    const [address, setAddress] = useState('');\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [zipCode, setZipcode] = useState('');\n    const [country, setCountry] = useState('');\n  \n\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        //find a way to overwrite the information if the customer wants to change shipping address\n        \n        dispatch(saveShipping({address, city, state, zipCode, country}));\n        props.history.push('payment');\n    }\n\n    return <div>\n        <CheckoutSteps step1 step2></CheckoutSteps>\n        <div className=\"form\">\n            <form onSubmit={submitHandler}>\n                <ul className=\"form-container\">\n                    <li>\n                        <h2>Shipping Details</h2>\n                    </li>\n                    <li>\n\n                    </li>\n                    <li>\n                        <label htmlFor=\"name\">\n                            Address\n                        </label>\n                        <input type=\"text\" name=\"address\" id=\"address\" onChange={(e) => setAddress(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <label htmlFor=\"city\">\n                            City\n                        </label>\n                        <input type=\"text\" name=\"city\" id=\"city\" onChange={(e) => setCity(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <label htmlFor=\"state\">\n                            State\n                        </label>\n                        <input type=\"text\" name=\"state\" id=\"state\" onChange={(e) => setState(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <label htmlFor=\"zipCode\">\n                            Zip Code\n                        </label>\n                        <input type=\"text\" name=\"zipCode\" id=\"zipCode\" onChange={(e) => setZipcode(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <label htmlFor=\"country\">\n                            Country\n                        </label>\n                        <input type=\"text\" name=\"country\" id=\"country\" onChange={(e) => setCountry(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <button type=\"submit\" className=\"button primary\"> Continue </button>\n                    </li>\n                </ul>\n            </form>\n        </div>\n    </div>\n\n}\n\n\n\nexport default ShippingScreen;\n","/home/vrdevchris/rappaSite/frontend/src/components/CheckoutSteps.js",[],"/home/vrdevchris/rappaSite/frontend/src/Screens/PaymentScreen.js",["331","332","333"],"import { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { savePayment } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nfunction PaymentScreen (props) {\n\n    const [paymentMethod, setPaymentMethod] = useState('');\n  \n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(savePayment({ paymentMethod }));\n        props.history.push('placeorder');\n    }\n\n    return <div>\n        <CheckoutSteps step1 step2 step3 ></CheckoutSteps>\n        <div className=\"form\">\n            <form onSubmit={submitHandler}>\n                <ul className=\"form-container\">\n                    <li>\n                        <h2>Payment</h2>\n                    </li>\n                    <li>\n\n                    </li>\n                    <li>\n                        <div>\n                            <input type=\"radio\" name=\"paymentMethod\" id=\"paymentMethod\" value=\"paypal\"\n                            onChange={(e) => setPaymentMethod(e.target.value)}>\n                            </input>\n                            <label htmlFor=\"paymentMethod\">\n                                Paypal\n                            </label>\n                        </div>\n                    </li>\n                    <li>\n                        <button type=\"submit\" className=\"button primary\"> Continue </button>\n                    </li>\n                </ul>\n            </form>\n        </div>\n    </div>\n\n}\n\n\n\nexport default PaymentScreen;\n","/home/vrdevchris/rappaSite/frontend/src/Screens/PlaceOrderScreen.js",["334","335","336"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { createOrder } from '../actions/orderActions';\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\n\nfunction PlaceOrderScreen(props) {\n\n    const cart =  useSelector(state => state.cart);\n    const orderCreate = useSelector(state => state.orderCreate);\n    const { loading, success, error, order } = orderCreate;\n    const orderDetails = useSelector((state) => state.orderDetails);\n\n    const { cartItems, shipping, payment } = cart;\n    if(!shipping.address){\n        props.history.push(\"/shipping\")\n    } else if (!payment.paymentMethod) {\n        props.history.push(\"/payment\")\n    }\n\n    const itemsPrice = cartItems.reduce((a, c) => a + c.price*c.qty, 0);\n    const shippingPrice = itemsPrice > 100 ? 0 : 10;\n    const taxPrice = 0.15 * itemsPrice;\n    const totalPrice = itemsPrice + shippingPrice + taxPrice;\n    const stripeID = cartItems[0].stripeID;\n\n    const dispatch = useDispatch();\n\n    const placeOrderHandler = () =>{\n        dispatch(createOrder({\n            orderItems:\n            cartItems, \n            shipping, \n            payment, \n            itemsPrice, \n            shippingPrice, \n            taxPrice, \n            totalPrice,\n            stripeID\n        }))\n    }\n\n    useEffect(() => {\n        if(success){\n            props.history.push(`/order/${order._id}`);\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n\n    }, [dispatch, order, props.history, success]);\n\n    return <div>\n        <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\n        <div className=\"placeorder\">\n            <div className=\"placeorder-info\">\n                <div>\n                    <h3>\n                        Shipping\n                    </h3>\n                    <div>\n                        {cart.shipping.address}, {cart.shipping.city}, {cart.shipping.state}\n                        {cart.shipping.zipCode}, {cart.shipping.country}\n                    </div>\n                </div>\n                <div>\n                    <h3>Payment</h3>\n                    <div>\n                        Payment Method: {cart.payment.paymentMethod}\n                    </div>\n                </div>\n                <div>\n                    <ul className=\"cart-list-container\">\n                        <li>\n                            <h3>\n                                Shopping Cart\n                            </h3>\n                        \n                        <div>\n                            Price\n                        </div>\n                        </li>\n                            {\n                                cartItems.length === 0 ?\n                                <div>\n                                    Cart is empty\n                                </div>\n                                :\n                                cartItems.map(item =>\n                                <li key={ Math.random().toString(36).substr(2,9)}>\n                                    <div className = \"cart-image\">\n                                        <img src={item.image} alt=\"product\" />\n                                    </div>\n                                    <div className=\"cart-name\">\n                                        <div>\n                                            <Link to={\"/product/\" + item.product}>\n                                                {item.name}\n                                            </Link>\n                                        </div>\n                                        <div>\n                                            Qty: {item.qty}\n                                        </div>\n                                    </div>\n                                    <div className = \"cart-price\">\n                                        ${item.price}\n                                    </div>\n                                </li>  \n                                    )\n                            }\n                    </ul>\n                </div>    \n            </div>\n            <div className=\"placeorder-action\">\n                <ul>\n                    <li>\n                        <button className= \"button primary full-width\" onClick={placeOrderHandler} >Place Order</button>\n                    </li>\n                    <li>\n                       <h3>Order Summary</h3> \n                    </li>\n                    <li>\n                        <div>Items</div>\n                        <div>${itemsPrice}</div>\n                    </li>\n                    <li>\n                        <div>Shipping</div>\n                        <div>${shippingPrice}</div>\n                    </li>\n                    <li>\n                        <div>Tax</div>\n                        <div>${taxPrice}</div>\n                    </li>\n                    <li>\n                        <div>Order Total</div>\n                        <div>${totalPrice}</div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    \n}\n\nexport default PlaceOrderScreen;\n","/home/vrdevchris/rappaSite/frontend/src/actions/orderActions.js",[],"/home/vrdevchris/rappaSite/frontend/src/constants/orderConstants.js",[],"/home/vrdevchris/rappaSite/frontend/src/reducers/orderReducers.js",[],"/home/vrdevchris/rappaSite/frontend/src/Screens/OrderScreen.js",["337","338","339","340","341","342","343","344"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { detailsOrder, payOrder } from '../actions/orderActions';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport Axios from 'axios';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { ORDER_PAY_RESET } from '../constants/orderConstants';\n\n// Stripe Stuff\n\nimport CardInput from '../components/CardInput';\nimport {useStripe, useElements, CardElement} from '@stripe/react-stripe-js';\nimport axios from 'axios';\n\n// \n\n\nfunction OrderScreen(props) {\n\n\n  // Stripe Stuff\n  const userSignin = useSelector(state => state.userSignin) \n  const { userInfo } = userSignin; \n\n  const email = useState('');\n\n\n\n\n  // \n  const orderId = props.match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay, error: errorPay } = orderPay;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const { data } = await Axios.get('/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n    if (\n      !order ||\n      successPay ||\n      (order && order._id !== orderId)\n    ) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch(detailsOrder(orderId));\n    } else {\n      if (!order.isPaid) {\n        if (!window.paypal) {\n          addPayPalScript();\n        } else {\n          setSdkReady(true);\n        }\n      }\n    }\n  }, [dispatch, orderId, sdkReady, successPay, order, successPay]);\n\n  const handleSuccessPayment = (paymentResult) => {\n    dispatch(payOrder(order, paymentResult));\n  }\n\n\n  return loading ? (\n    <LoadingBox />\n    ) : error ? (\n      <MessageBox variant=\"danger\">{error}</MessageBox>\n    ) : (\n\n    <div>\n      <div className=\"placeorder\">\n        <div className=\"placeorder-info\">\n          <div>\n            <h3>\n              Shipping\n          </h3>\n            <div>\n              {order.shipping.address}, {order.shipping.city}, {order.shipping.state}\n              {order.shipping.zipCode}, {order.shipping.country}\n            </div>\n            <div>\n              {order.isDelivered ? (\n                <MessageBox variant=\"success\">Delivered at {order.deliveredAt}</MessageBox>\n              ) : (\n                <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n              )}\n            </div>\n          </div>\n          <div>\n            <h3>Payment</h3>\n            <div>\n              Payment Method: {order.payment.paymentMethod}\n            </div>\n            <div>\n              {order.isPaid ? \"Paid at \" + order.paidAt : \"Not Paid.\"}\n            </div>\n          </div>\n          <div>\n            <ul className=\"cart-list-container\">\n              <li>\n                <h3>\n                  Shopping Cart\n          </h3>\n                <div>\n                  Price\n          </div>\n              </li>\n              {\n                order.orderItems.length === 0 ?\n                  <div>\n                    Cart is empty\n          </div>\n                  :\n                  order.orderItems.map(item =>\n                    <li key={item._id}>\n                      <div className=\"cart-image\">\n                        <img src={item.image} alt=\"product\" />\n                      </div>\n                      <div className=\"cart-name\">\n                        <div>\n                          <Link to={\"/product/\" + item.product}>\n                            {item.name}\n                          </Link>\n\n                        </div>\n                        <div>\n                          Qty: {item.qty}\n                        </div>\n                      </div>\n                      <div className=\"cart-price\">\n                        ${item.price}\n                      </div>\n                    </li>\n                  )\n              }\n            </ul>\n          </div>\n\n\n        </div>\n        <div className=\"placeorder-action\">\n          <ul>\n            {!order.isPaid && (\n            <li className=\"placeorder-actions-payment\">\n              {!sdkReady ? (\n                <div>Loading...</div>\n              ) : (\n                <>\n                {errorPay && (\n                  <div>{errorPay}</div>\n                )}\n                {loadingPay && (\n                  <div>Loading...</div>\n                )}\n                <PayPalButton amount={order.totalPrice} onSuccess={handleSuccessPayment}></PayPalButton>\n                \n                </>\n              )}\n            </li>\n            )}\n            <li>\n              <h3>Order Summary</h3>\n            </li>\n            <li>\n              <div>Items</div>\n              <div>${order.itemsPrice}</div>\n            </li>\n            <li>\n              <div>Shipping</div>\n              <div>${order.shippingPrice}</div>\n            </li>\n            <li>\n              <div>Tax</div>\n              <div>${order.taxPrice}</div>\n            </li>\n            <li>\n              <div>Order Total</div>\n              <div>${order.totalPrice}</div>\n            </li>\n          </ul>\n\n\n\n        </div>\n\n      </div>\n    </div>\n\n)}\n\nexport default OrderScreen;\n","/home/vrdevchris/rappaSite/frontend/src/components/LoadingBox.js",[],"/home/vrdevchris/rappaSite/frontend/src/components/MessageBox.js",[],"/home/vrdevchris/rappaSite/frontend/src/Screens/ProfileScreen.js",["345","346"],"//made all this\n\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout, update } from '../actions/userActions';\nimport { listMyOrders } from '../actions/orderActions';\n\nfunction ProfileScreen(props) {\n\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userSignin = useSelector(state => state.userSignin) \n    const { userInfo } = userSignin;  \n\n    const handleLogout = () =>{\n        dispatch(logout());\n        props.history.push(\"/signin\");\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(update({ userId: userInfo._id, email, name, password}));\n    }\n\n    const userUpdate = useSelector(state => state.userUpdate);\n    const { loading, success, error } = userUpdate;\n\n    const myOrderList = useSelector(state => state.myOrderList);\n    const { loading: loadingOrders, orders, error: errorOrders } = myOrderList;\n\n    console.log(myOrderList);\n    console.log(orders);\n    \n    useEffect(() => {\n        if(userInfo){\n            setEmail(userInfo.email);\n            setName(userInfo.name);\n            setPassword(userInfo.password);\n        }\n        dispatch(listMyOrders());\n        return () => {\n            \n        }\n    }, [dispatch])\n\n    return <div className=\"profile\">\n        <div className=\"profile-info\">\n            <div className=\"form\">\n                <form onSubmit={submitHandler}>\n                    <ul className=\"form-container\">\n                        <li>\n                            <h2>User Profile</h2>\n                        </li>\n                        <li>\n                            {loading && <div>Loading...</div>}\n                            {error && <div>{error}</div>}\n                            {success && <div>Profile Saved Successfully</div>}\n                        </li>\n                        <li>\n                            <label htmlFor=\"name\">\n                                Name\n                            </label>\n                            <input value={name} type=\"name\" name=\"name\" id=\"name\" onChange={(e) => setName(e.target.value)}></input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"email\">\n                                Email\n                            </label>\n                            <input value={email} type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}></input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"password\">\n                                Password\n                            </label>\n                            <input value={password} type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)}></input>\n                        </li>\n                        <li>\n                            <button onClick={submitHandler} type=\"submit\" className=\"button primary full-width\"> Update </button>\n                        </li>\n                        <li>\n                            <button type=\"button\" onClick={handleLogout} type=\"submit\" className=\"button secondary full-width\"> Logout </button>\n                        </li>\n                        \n                    </ul>\n                </form>\n            </div>\n        </div>\n        <div className=\"profile-orders content-margin\">\n            <div className=\"orders-header\">Your Past Orders</div>\n            {\n                loadingOrders ? <div>Loading...</div>:\n                errorOrders ? <div>{errorOrders}</div> :\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>DATE</th>\n                            <th>TOTAL</th>\n                            <th>PAID</th>\n                            <th>ACTIONS</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders.map(order => <tr key={order._id}>\n                            <td>{order._id}</td>\n                            <td>{order.createdAt.substring(0,10)}</td>\n                            <td>{order.totalPrice}</td>\n                            <td>{order.isPaid}</td>\n                            <td>\n                                <Link to={\"/order/\" + order._id}>DETAILS</Link>\n                            </td>\n                        </tr>)}\n                    </tbody>\n                </table>\n            }\n        </div>\n    </div>\n}\n\nexport default ProfileScreen;\n\n","/home/vrdevchris/rappaSite/frontend/src/Screens/OrdersScreen.js",["347","348","349","350","351"],"import { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { listOrders, deleteOrder } from '../actions/orderActions';\n\n\nfunction OrdersScreen (props) {\n\n    const orderList = useSelector((state) => state.orderList);\n    const { loading, orders, error } = orderList;\n\n    const orderDelete = useSelector((state) => state.orderDelete || {});\n    const { loading: loadingDelete, success: successDelete, error: errorDelete } = orderDelete;\n\n    const dispatch = useDispatch();\n    console.log(orderList)\n\n    useEffect(() => {\n            dispatch(listOrders());\n        return () => {\n          //\n        };\n      }, [successDelete]);\n\n\n    const deleteHandler = (order) => {\n        dispatch(deleteOrder(order._id))\n    }\n\n    return loading ? <div>Loading...</div> :\n    <div className=\"content content-margined\">\n        <div className=\"order-header\">\n            <h3>Orders</h3>\n        </div>\n        <div className=\"order-list\">\n            <table className = \"table\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>DATE</th>\n                        <th>TOTAL</th>\n                        <th>USER</th>\n                        <th>PAID</th>\n                        <th>PAID AT</th>\n                        <th>DELIVERED</th>\n                        <th>DELIVERED AT</th>\n                        <th>ACTIONS</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {orders.map((order) =>(\n                    <tr key={order._id}>\n                        <td>{order._id}</td>\n                        <td>{order.createdAt}</td>\n                        <td>{order.totalPrice}</td>\n                        <td>{order.user.name}</td>\n                        <td>{order.isPaid.toString()}</td>\n                        <td>{order.paidAt}</td>\n                        <td>{order.isDelivered.toString()}</td>\n                        <td>{order.deliveredAt}</td>\n                        <td>\n                            <Link to={\"/order/\" + order._id} className=\"button seconday\" > Details </Link>\n                            {''}\n                            <button type=\"button\" onClick={() => deleteHandler(order)} className=\" button secondary\"> Delete </button>\n                        </td>\n                    </tr>))}\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n}\n\nexport default OrdersScreen;","/home/vrdevchris/rappaSite/frontend/src/Screens/OrderScreenStripe.js",["352","353","354"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { detailsOrder, payOrder } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { ORDER_PAY_RESET } from '../constants/orderConstants';\nimport  StripePayment from '../components/StripePayment';\nimport {useStripe, useElements, CardElement} from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport CardInput from '../components/CardInput';\n\n\n\n\nfunction OrderScreen(props) {\n\n  const userSignin = useSelector(state => state.userSignin) \n  const { userInfo } = userSignin; \n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const email = userInfo.email;\n\n  const orderId = props.match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay, error: errorPay } = orderPay;\n  const dispatch = useDispatch();\n\n\n  // Stripe Payment Stuff\n  const [stripeId, setStripeId] = useState('');\n\n\n  const handleSubmit = async (event)  => {\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    const res = await axios.post(`/${order._id}/pay`, {email: email});\n\n    const clientSecret = res.data['client_secret'];\n\n    const result = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          email: userInfo.email,\n        },\n      },\n    });\n\n    if (result.error) {\n      // Show error to your customer (e.g., insufficient funds)\n      console.log(result.error.message);\n    } else {\n      // The payment has been processed!\n      if (result.paymentIntent.status === 'succeeded') {\n        handleSuccessPayment(result.paymentIntent);\n        // console.log(result.paymentIntent);\n      }\n    }\n  };\n\n  const handleSubmitSub = async () => {\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const result = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n      billing_details: {\n        email: email,\n      },\n    });\n\n    if (result.error) {\n      console.log(result.error.message);\n    } else {\n      const res = await axios.post('http://localhost:5000/sub',  \n      {\n        'payment_method': result.paymentMethod.id,\n        'email': email,\n        'stripeId': stripeId\n      });\n      \n      // eslint-disable-next-line camelcase\n      const {client_secret, status} = res.data;\n\n      if (status === 'requires_action') {\n        stripe.confirmCardPayment(client_secret).then(function(result) {\n          if (result.error) {\n            console.log('There was an issue!');\n            console.log(result.error);\n            // Display error message in your UI.\n            // The card was declined (i.e. insufficient funds, card has expired, etc)\n          } else {\n            console.log('You got the money!');\n          }\n        });\n      } else {\n        console.log(\"payment success\");\n        handleSuccessSub(result.paymentIntent);   \n        // No additional information was needed\n        // Show a success message to your customer\n      }\n    }\n  };\n\n  // End Stripe Payment Stuff\n\n\n\n  useEffect(() => {\n    if (\n      !order ||\n      successPay ||\n      (order && order._id !== orderId)\n    ) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch(detailsOrder(orderId));\n    } else {\n      setSdkReady(true);\n      setStripeId(order.stripeID);\n    }}, [dispatch, orderId, sdkReady, successPay, order]);\n\n  const handleSuccessPayment = (paymentResult) => {\n    dispatch(payOrder(order, paymentResult));\n  }\n\n  const handleSuccessSub = (paymentResult) => {\n    dispatch(payOrder(order, paymentResult));\n  }\n\n  return loading ? (\n    <LoadingBox />\n    ) : error ? (\n      <MessageBox variant=\"danger\">{error}</MessageBox>\n    ) : (\n    <div>\n      <div className=\"placeorder\">\n        <div className=\"placeorder-info\">\n          <div>\n            <h3>\n              Shipping\n          </h3>\n            <div>\n              {order.shipping.address}, {order.shipping.city}, {order.shipping.state}\n              {order.shipping.zipCode}, {order.shipping.country}\n            </div>\n            <div>\n              {order.isDelivered ? (\n                <MessageBox variant=\"success\">Delivered at {order.deliveredAt}</MessageBox>\n              ) : (\n                <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n              )}\n            </div>\n          </div>\n          <div>\n            <h3>Payment</h3>\n            <div>\n              Payment Method: {order.payment.paymentMethod}\n            </div>\n            <div>\n              {order.isPaid ? \"Paid at \" + order.paidAt : \"Not Paid.\"}\n            </div>\n          </div>\n          <div>\n            <ul className=\"cart-list-container\">\n              <li>\n                <h3>\n                  Shopping Cart\n          </h3>\n                <div>\n                  Price\n          </div>\n              </li>\n              {\n                order.orderItems.length === 0 ?\n                  <div>\n                    Cart is empty\n          </div>\n                  :\n                  order.orderItems.map(item =>\n                    <li key={item._id}>\n                      <div className=\"cart-image\">\n                        <img src={item.image} alt=\"product\" />\n                      </div>\n                      <div className=\"cart-name\">\n                        <div>\n                          <Link to={\"/product/\" + item.product}>\n                            {item.name}\n                          </Link>\n\n                        </div>\n                        <div>\n                          Qty: {item.qty}\n                        </div>\n                      </div>\n                      <div className=\"cart-price\">\n                        ${item.price}\n                      </div>\n                    </li>\n                  )\n              }\n            </ul>\n          </div>\n\n\n        </div>\n        <div className=\"placeorder-action\">\n          <ul>\n            {!order.isPaid && (\n            <li className=\"placeorder-actions-payment\">\n              {!sdkReady ? (\n                <div>Loading...</div>\n              ) : (\n                <>\n                {/* {errorPay && (\n                  <div>{errorPay}</div>\n                )}\n                {loadingPay && (\n                  <div>Loading...</div>\n                )} */}\n\n                {/* Stripe JSX */}\n                <div className=\"stripe-container\">\n                  <form className=\"stripe-form\">\n                    <ul>\n                      <li className=\"email-form\">\n                        <label htmlFor=\"email\">\n                          Email:\n                        </label>\n                        <p type=\"email\" value={email} name=\"email\" id=\"email\">{userInfo.email}</p>\n                      </li>\n                      <li>\n                        <CardInput />\n                      </li>\n                    </ul>\n                  </form>\n                  <div className=\"stripe-pay\">\n                    <button className=\"stripe-button button primary\" onClick={handleSubmit}>\n                      Pay\n                    </button>\n                    <button className=\"stripe-button button primary\" onClick={() => handleSubmitSub(stripeId)}>\n                      Subscribe\n                    </button>\n                  </div>\n                </div>\n                {/* End Stripe JSX */}\n                {/* <StripePayment amount={order.totalPrice} successPay={props.handleSuccessPayment}/> */}\n                {/* <PayPalButton amount={order.totalPrice} onSuccess={handleSuccessPayment}></PayPalButton> */}\n                \n                </>\n              )}\n            </li>\n            )}\n            <li>\n              <h3>Order Summary</h3>\n            </li>\n            <li>\n              <div>Items</div>\n              <div>${order.itemsPrice}</div>\n            </li>\n            <li>\n              <div>Shipping</div>\n              <div>${order.shippingPrice}</div>\n            </li>\n            <li>\n              <div>Tax</div>\n              <div>${order.taxPrice}</div>\n            </li>\n            <li>\n              <div>Order Total</div>\n              <div>${order.totalPrice}</div>\n            </li>\n          </ul>\n\n\n\n        </div>\n\n      </div>\n    </div>\n\n)}\n\nexport default OrderScreen;\n","/home/vrdevchris/rappaSite/frontend/src/components/CardInput.js",[],"/home/vrdevchris/rappaSite/frontend/src/components/StripePayment.js",["355","356"],"import CardInput from '../components/CardInput';\nimport {useStripe, useElements, CardElement} from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction StripePayment(){\n\n  const [email, setEmail] = useState('');\n\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const userSignin = useSelector(state => state.userSignin) \n  const { userInfo } = userSignin;  \n\n  console.log(userInfo);\n\n  const handleSubmit = async (event) => {\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const res = await axios.post('http://localhost:5000/pay', {email: email});\n\n    const clientSecret = res.data['client_secret'];\n\n    const result = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          email: email,\n        },\n      },\n    });\n\n    if (result.error) {\n      // Show error to your customer (e.g., insufficient funds)\n      console.log(result.error.message);\n    } else {\n      // The payment has been processed!\n      if (result.paymentIntent.status === 'succeeded') {\n        console.log('Money is in the bank!');\n      }\n    }\n  };\n\n  const handleSubmitSub = async (event) => {\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const result = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n      billing_details: {\n        email: email,\n      },\n    });\n\n    if (result.error) {\n      console.log(result.error.message);\n    } else {\n      const res = await axios.post('http://localhost:5000/sub', {'payment_method': result.paymentMethod.id, 'email': email});\n      // eslint-disable-next-line camelcase\n      const {client_secret, status} = res.data;\n\n      if (status === 'requires_action') {\n        stripe.confirmCardPayment(client_secret).then(function(result) {\n          if (result.error) {\n            console.log('There was an issue!');\n            console.log(result.error);\n            // Display error message in your UI.\n            // The card was declined (i.e. insufficient funds, card has expired, etc)\n          } else {\n            console.log('You got the money!');\n          }\n        });\n      } else {\n        console.log(\"payment success\");\n        return (this.props.handleSubmitSub);     \n        // No additional information was needed\n        // Show a success message to your customer\n      }\n    }\n  };\n\n\n\n  useEffect(() => {\n    if(userInfo){\n      setEmail(userInfo.email);\n    }\n    return () => {\n        \n    }\n}, [userInfo.email])\n\n\n  return(\n      <div className=\"stripe-container\">\n        <form className=\"stripe-form\">\n          <ul>\n            <li className=\"email-form\">\n              <label htmlFor=\"email\">\n                Email:\n              </label>\n              <p type=\"email\" value={email} name=\"email\" id=\"email\">{userInfo.email}</p>\n            </li>\n            <li>\n              <CardInput />\n            </li>\n          </ul>\n        </form>\n        <div className=\"stripe-pay\">\n          <button className=\"stripe-button button primary\" onClick={handleSubmit}>\n            Pay\n          </button>\n          <button className=\"stripe-button button primary\" onClick={handleSubmitSub}>\n            Subscribe\n          </button>\n        </div>\n      </div>\n  )\n\n}\n\nexport default StripePayment;\n\n","/home/vrdevchris/sportsBook/frontend/src/index.js",[],["357","358"],"/home/vrdevchris/sportsBook/frontend/src/App.js",[],"/home/vrdevchris/sportsBook/frontend/src/store.js",[],"/home/vrdevchris/sportsBook/frontend/src/Screens/HomeScreen.js",[],"/home/vrdevchris/sportsBook/frontend/src/Screens/ProfileScreen.js",[],"/home/vrdevchris/sportsBook/frontend/src/reducers/userReducers.js",[],"/home/vrdevchris/sportsBook/frontend/src/actions/userActions.js",[],"/home/vrdevchris/sportsBook/frontend/src/constants/userConstants.js",[],"/home/vrdevchris/sportsBook/frontend/src/reducers/postReducers.js",[],"/home/vrdevchris/sportsBook/frontend/src/actions/postActions.js",[],"/home/vrdevchris/sportsBook/frontend/src/constants/postConstants.js",[],"/home/vrdevchris/sportsBook/frontend/src/components/Navbar.js",[],"/home/vrdevchris/sportsBook/frontend/src/components/PostComponents/PostFilter.js",[],"/home/vrdevchris/sportsBook/frontend/src/components/SidebarComponents/Sidebar.js",[],"/home/vrdevchris/sportsBook/frontend/src/components/SidebarComponents/Advertisement.js",[],"/home/vrdevchris/sportsBook/frontend/src/components/ProfileComponents/ProfileNav.js",[],"/home/vrdevchris/sportsBook/frontend/src/Screens/PredictionsScreen.js",[],"/home/vrdevchris/sportsBook/frontend/src/Screens/UpcomingScreen.js",[],"/home/vrdevchris/sportsBook/frontend/src/components/UpcomingComponents/UpcomingGames.js",[],"/home/vrdevchris/sportsBook/frontend/src/components/UpcomingComponents/UpcomingInfo.js",[],"/home/vrdevchris/sportsBook/frontend/src/components/SidebarComponents/UpcomingGamesSide.js",[],"/home/vrdevchris/sportsBook/frontend/src/components/RegisterSignIn/Register.js",[],"/home/vrdevchris/sportsBook/frontend/src/components/RegisterSignIn/SignIn.js",[],"/home/vrdevchris/sportsBook/frontend/src/components/PredictionsComponents/Predictions.js",[],"/home/vrdevchris/sportsBook/frontend/src/components/PredictionsComponents/PredictionsInfo.js",[],"/home/vrdevchris/sportsBook/frontend/src/components/SidebarComponents/PredictionsSide.js",[],"/home/vrdevchris/sportsBook/frontend/src/components/PostComponents/Post.js",[],"/home/vrdevchris/sportsBook/frontend/src/components/PostComponents/Comments.js",[],"/home/vrdevchris/sportsBook/frontend/src/Screens/CreatePostScreen.js",[],"/home/vrdevchris/sportsBook/frontend/src/components/PostComponents/CreatePost.js",[],"/home/vrdevchris/sportsBook/frontend/src/reducers/sportsAPIReducers.js",[],"/home/vrdevchris/sportsBook/frontend/src/constants/sportsAPIConstants.js",[],"/home/vrdevchris/sportsBook/frontend/src/actions/sportsAPIActions.js",[],"/home/vrdevchris/sportsBook/frontend/src/Screens/InnerPostScreen.js",[],"/home/vrdevchris/sportsBook/frontend/src/components/SidebarComponents/GoogleAds.js",[],{"ruleId":"359","replacedBy":"360"},{"ruleId":"361","replacedBy":"362"},{"ruleId":"363","severity":1,"message":"364","line":12,"column":8,"nodeType":"365","messageId":"366","endLine":12,"endColumn":19},{"ruleId":"367","severity":1,"message":"368","line":70,"column":15,"nodeType":"369","endLine":70,"endColumn":27},{"ruleId":"363","severity":1,"message":"370","line":17,"column":13,"nodeType":"365","messageId":"366","endLine":17,"endColumn":20},{"ruleId":"371","severity":1,"message":"372","line":27,"column":8,"nodeType":"373","endLine":27,"endColumn":18,"suggestions":"374"},{"ruleId":"363","severity":1,"message":"375","line":30,"column":11,"nodeType":"365","messageId":"366","endLine":30,"endColumn":24},{"ruleId":"363","severity":1,"message":"376","line":35,"column":11,"nodeType":"365","messageId":"366","endLine":35,"endColumn":22},{"ruleId":"377","severity":1,"message":"378","line":44,"column":9,"nodeType":"369","endLine":44,"endColumn":126},{"ruleId":"377","severity":1,"message":"378","line":49,"column":9,"nodeType":"369","endLine":49,"endColumn":137},{"ruleId":"377","severity":1,"message":"378","line":54,"column":7,"nodeType":"369","endLine":54,"endColumn":105},{"ruleId":"363","severity":1,"message":"379","line":1,"column":9,"nodeType":"365","messageId":"366","endLine":1,"endColumn":13},{"ruleId":"371","severity":1,"message":"380","line":44,"column":10,"nodeType":"373","endLine":44,"endColumn":12,"suggestions":"381"},{"ruleId":"377","severity":1,"message":"378","line":59,"column":17,"nodeType":"369","endLine":59,"endColumn":120},{"ruleId":"377","severity":1,"message":"378","line":61,"column":17,"nodeType":"369","endLine":61,"endColumn":118},{"ruleId":"382","severity":1,"message":"383","line":38,"column":69,"nodeType":"384","messageId":"385","endLine":38,"endColumn":71},{"ruleId":"382","severity":1,"message":"383","line":38,"column":131,"nodeType":"384","messageId":"385","endLine":38,"endColumn":133},{"ruleId":"363","severity":1,"message":"386","line":9,"column":19,"nodeType":"365","messageId":"366","endLine":9,"endColumn":28},{"ruleId":"363","severity":1,"message":"387","line":4,"column":18,"nodeType":"365","messageId":"366","endLine":4,"endColumn":26},{"ruleId":"363","severity":1,"message":"388","line":10,"column":12,"nodeType":"365","messageId":"366","endLine":10,"endColumn":16},{"ruleId":"363","severity":1,"message":"389","line":10,"column":18,"nodeType":"365","messageId":"366","endLine":10,"endColumn":25},{"ruleId":"371","severity":1,"message":"390","line":28,"column":10,"nodeType":"373","endLine":28,"endColumn":20,"suggestions":"391"},{"ruleId":"363","severity":1,"message":"392","line":10,"column":12,"nodeType":"365","messageId":"366","endLine":10,"endColumn":22},{"ruleId":"371","severity":1,"message":"390","line":24,"column":10,"nodeType":"373","endLine":24,"endColumn":20,"suggestions":"393"},{"ruleId":"363","severity":1,"message":"394","line":4,"column":10,"nodeType":"365","messageId":"366","endLine":4,"endColumn":18},{"ruleId":"363","severity":1,"message":"395","line":5,"column":8,"nodeType":"365","messageId":"366","endLine":5,"endColumn":18},{"ruleId":"363","severity":1,"message":"396","line":23,"column":12,"nodeType":"365","messageId":"366","endLine":23,"endColumn":19},{"ruleId":"363","severity":1,"message":"397","line":23,"column":31,"nodeType":"365","messageId":"366","endLine":23,"endColumn":36},{"ruleId":"363","severity":1,"message":"398","line":29,"column":22,"nodeType":"365","messageId":"366","endLine":29,"endColumn":35},{"ruleId":"363","severity":1,"message":"399","line":29,"column":68,"nodeType":"365","messageId":"366","endLine":29,"endColumn":79},{"ruleId":"371","severity":1,"message":"372","line":43,"column":10,"nodeType":"373","endLine":43,"endColumn":38,"suggestions":"400"},{"ruleId":"363","severity":1,"message":"379","line":1,"column":10,"nodeType":"365","messageId":"366","endLine":1,"endColumn":14},{"ruleId":"363","severity":1,"message":"401","line":2,"column":10,"nodeType":"365","messageId":"366","endLine":2,"endColumn":21},{"ruleId":"363","severity":1,"message":"402","line":3,"column":17,"nodeType":"365","messageId":"366","endLine":3,"endColumn":26},{"ruleId":"363","severity":1,"message":"379","line":1,"column":10,"nodeType":"365","messageId":"366","endLine":1,"endColumn":14},{"ruleId":"363","severity":1,"message":"401","line":2,"column":10,"nodeType":"365","messageId":"366","endLine":2,"endColumn":21},{"ruleId":"363","severity":1,"message":"402","line":3,"column":17,"nodeType":"365","messageId":"366","endLine":3,"endColumn":26},{"ruleId":"363","severity":1,"message":"396","line":12,"column":13,"nodeType":"365","messageId":"366","endLine":12,"endColumn":20},{"ruleId":"363","severity":1,"message":"397","line":12,"column":31,"nodeType":"365","messageId":"366","endLine":12,"endColumn":36},{"ruleId":"363","severity":1,"message":"403","line":13,"column":11,"nodeType":"365","messageId":"366","endLine":13,"endColumn":23},{"ruleId":"363","severity":1,"message":"404","line":13,"column":8,"nodeType":"365","messageId":"366","endLine":13,"endColumn":17},{"ruleId":"363","severity":1,"message":"405","line":14,"column":9,"nodeType":"365","messageId":"366","endLine":14,"endColumn":18},{"ruleId":"363","severity":1,"message":"406","line":14,"column":20,"nodeType":"365","messageId":"366","endLine":14,"endColumn":31},{"ruleId":"363","severity":1,"message":"407","line":14,"column":33,"nodeType":"365","messageId":"366","endLine":14,"endColumn":44},{"ruleId":"363","severity":1,"message":"408","line":15,"column":8,"nodeType":"365","messageId":"366","endLine":15,"endColumn":13},{"ruleId":"363","severity":1,"message":"409","line":25,"column":11,"nodeType":"365","messageId":"366","endLine":25,"endColumn":19},{"ruleId":"363","severity":1,"message":"410","line":27,"column":9,"nodeType":"365","messageId":"366","endLine":27,"endColumn":14},{"ruleId":"371","severity":1,"message":"411","line":71,"column":6,"nodeType":"373","endLine":71,"endColumn":66,"suggestions":"412"},{"ruleId":"371","severity":1,"message":"413","line":49,"column":8,"nodeType":"373","endLine":49,"endColumn":18,"suggestions":"414"},{"ruleId":"415","severity":1,"message":"416","line":86,"column":74,"nodeType":"417","endLine":86,"endColumn":87},{"ruleId":"363","severity":1,"message":"418","line":2,"column":28,"nodeType":"365","messageId":"366","endLine":2,"endColumn":36},{"ruleId":"363","severity":1,"message":"397","line":10,"column":30,"nodeType":"365","messageId":"366","endLine":10,"endColumn":35},{"ruleId":"363","severity":1,"message":"398","line":13,"column":22,"nodeType":"365","messageId":"366","endLine":13,"endColumn":35},{"ruleId":"363","severity":1,"message":"399","line":13,"column":68,"nodeType":"365","messageId":"366","endLine":13,"endColumn":79},{"ruleId":"371","severity":1,"message":"372","line":23,"column":10,"nodeType":"373","endLine":23,"endColumn":25,"suggestions":"419"},{"ruleId":"363","severity":1,"message":"420","line":8,"column":9,"nodeType":"365","messageId":"366","endLine":8,"endColumn":22},{"ruleId":"363","severity":1,"message":"421","line":33,"column":20,"nodeType":"365","messageId":"366","endLine":33,"endColumn":30},{"ruleId":"363","severity":1,"message":"422","line":33,"column":60,"nodeType":"365","messageId":"366","endLine":33,"endColumn":68},{"ruleId":"363","severity":1,"message":"423","line":5,"column":23,"nodeType":"365","messageId":"366","endLine":5,"endColumn":34},{"ruleId":"371","severity":1,"message":"413","line":102,"column":4,"nodeType":"373","endLine":102,"endColumn":20,"suggestions":"424"},{"ruleId":"359","replacedBy":"425"},{"ruleId":"361","replacedBy":"426"},"no-native-reassign",["427"],"no-negated-in-lhs",["428"],"no-unused-vars","'OrderScreen' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'product' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["429"],"'submitHandler' is assigned a value but never used.","'sortHandler' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["430"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'cartItems' is assigned a value but never used.","'register' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["431"],"'rePassword' is assigned a value but never used.",["432"],"'Redirect' is defined but never used.","'HomeScreen' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.",["433"],"'useSelector' is defined but never used.","'useEffect' is defined but never used.","'orderDetails' is assigned a value but never used.","'CardInput' is defined but never used.","'useStripe' is defined but never used.","'useElements' is defined but never used.","'CardElement' is defined but never used.","'axios' is defined but never used.","'userInfo' is assigned a value but never used.","'email' is assigned a value but never used.","React Hook useEffect has a duplicate dependency: 'successPay'. Either omit it or remove the dependency array.",["434"],"React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["435"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.",["436"],"'StripePayment' is defined but never used.","'loadingPay' is assigned a value but never used.","'errorPay' is assigned a value but never used.","'useDispatch' is defined but never used.",["437"],["427"],["428"],"no-global-assign","no-unsafe-negation",{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"442","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},"Update the dependencies array to be: [category, dispatch]",{"range":"455","text":"456"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"457","text":"458"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"459","text":"460"},{"range":"461","text":"460"},"Update the dependencies array to be: [successSave, successDelete, dispatch]",{"range":"462","text":"463"},"Update the dependencies array to be: [dispatch, orderId, sdkReady, successPay, order]",{"range":"464","text":"465"},"Update the dependencies array to be: [dispatch, userInfo]",{"range":"466","text":"467"},"Update the dependencies array to be: [dispatch, successDelete]",{"range":"468","text":"469"},"Update the dependencies array to be: [userInfo, userInfo.email]",{"range":"470","text":"471"},[766,776],"[category, dispatch]",[1105,1107],"[dispatch, props.match.params.id]",[877,887],"[props.history, redirect, userInfo]",[831,841],[1540,1568],"[successSave, successDelete, dispatch]",[1992,2052],"[dispatch, orderId, sdkReady, successPay, order]",[1414,1424],"[dispatch, userInfo]",[713,728],"[dispatch, successDelete]",[2871,2887],"[userInfo, userInfo.email]"]